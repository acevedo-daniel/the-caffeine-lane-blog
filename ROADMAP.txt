THECAFFEINELANE - ROADMAP DE APRENDIZAJE Y DESARROLLO
=====================================================

Este roadmap está diseñado para que tú y tu equipo aprendan Django y Python desarrollando un blog profesional, paso a paso. Cada etapa incluye conceptos clave y buenas prácticas. El enfoque es progresivo: primero lo esencial, luego mejoras visuales y de experiencia.

-----------------------------------------------------

ETAPA 1: BASE DEL PROYECTO Y PYTHON BÁSICO
------------------------------------------
- [x] Crear estructura profesional del proyecto
- [x] Configurar entorno virtual y .gitignore
- [x] Subir estructura limpia a GitHub
- [ ] Repasar conceptos básicos de Python: variables, funciones, clases, métodos, imports
- [ ] Entender qué es un modelo, una vista y un template en Django

-----------------------------------------------------

ETAPA 2: LANDING PAGE Y HOME
----------------------------
- [ ] Crear la app `core` para páginas generales
- [ ] Crear la landing page con botón "Entrar" (splash/landing)
- [ ] Crear la vista y template del home (lista de posts destacados)
- [ ] Repasar herencia de templates y estructura base.html
- [ ] Agregar navbar y footer en base.html
- [ ] Enlazar landing, home y blog correctamente en las URLs

-----------------------------------------------------

ETAPA 3: POSTS Y ADMIN
----------------------
- [ ] Definir el modelo Post (campos: título, contenido, autor, fecha, imagen)
- [ ] Crear y aplicar migraciones
- [ ] Registrar el modelo en admin.py
- [ ] Crear superusuario y probar el admin
- [ ] Explorar el panel de administración y su utilidad

-----------------------------------------------------

ETAPA 4: VISTAS, RUTAS Y TEMPLATES DE POSTS
-------------------------------------------
- [ ] Crear vista para listar posts (home/blog)
- [ ] Crear vista de detalle para un post
- [ ] Hacer que los posts en la lista sean clickeables y lleven al detalle
- [ ] Crear templates atractivos para lista y detalle de posts
- [ ] Mostrar imagen, título, resumen y autor en la lista
- [ ] Mostrar contenido completo, imagen y comentarios en el detalle

-----------------------------------------------------

ETAPA 5: COMENTARIOS Y USUARIOS
-------------------------------
- [ ] Crear modelo Comment y relacionarlo con Post y User
- [ ] Crear vistas y templates para mostrar y agregar comentarios
- [ ] Implementar registro y login de usuarios (Django auth)
- [ ] Proteger comentarios para usuarios autenticados
- [ ] Mostrar comentarios debajo de cada post

-----------------------------------------------------

ETAPA 6: MEJORAS VISUALES Y EXPERIENCIA
---------------------------------------
- [ ] Mejorar la navbar (menú, enlaces, logo)
- [ ] Mejorar el footer (info, redes, copyright)
- [ ] Usar Bootstrap o similar para estilos modernos
- [ ] Agregar paginación a la lista de posts
- [ ] Agregar filtros por categoría, fecha, etc.
- [ ] Usar crispy-forms para mejorar formularios
- [ ] Agregar editor enriquecido (ckeditor) para el contenido de los posts

-----------------------------------------------------

ETAPA 7: FUNCIONALIDADES EXTRA Y ESCALABILIDAD
----------------------------------------------
- [ ] Agregar página de contacto y about
- [ ] Agregar sistema de categorías/tags para los posts
- [ ] Agregar buscador de posts
- [ ] Agregar sistema de likes o favoritos
- [ ] Agregar newsletter o suscripción
- [ ] Preparar para despliegue en producción

-----------------------------------------------------

ETAPA 8: PRUEBAS, DOCUMENTACIÓN Y DESPLIEGUE
--------------------------------------------
- [ ] Escribir tests básicos en tests.py
- [ ] Documentar el código y actualizar el README
- [ ] Crear y mantener requirements.txt
- [ ] Configurar variables de entorno y settings de producción
- [ ] Desplegar en un servidor (Heroku, Render, PythonAnywhere, etc)
- [ ] Probar la app en producción y corregir errores

-----------------------------------------------------

RECOMENDACIONES PARA EL APRENDIZAJE EN EQUIPO
---------------------------------------------
- Trabaja en ramas separadas y haz pull requests para revisión.
- Haz commits pequeños y descriptivos.
- Comenta tu código y pregunta si tienes dudas.
- Repasa la documentación oficial de Django y Python.
- No temas equivocarte: cada error es una oportunidad de aprender.
- Comparte lo que aprendas con el equipo.

-----------------------------------------------------

¿Dudas? Consulta el README, la documentación oficial o pregunta en el equipo.
¡Disfruta el proceso y aprende desarrollando! 